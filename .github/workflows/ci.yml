name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  python-template-checks:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.11" ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: (Best-effort) Install uv
        shell: bash
        run: |
          if ! command -v uv >/dev/null 2>&1; then
            python -m pip install --upgrade pip
            pip install uv || true
          fi

      - name: Ensure base tooling (fallback)
        shell: bash
        run: |
          python -m pip install --upgrade pip
          pip install --disable-pip-version-check --quiet ruff black pytest || true

      - name: Find Python projects with pyproject.toml
        id: find_projects
        shell: bash
        run: |
          python - << 'PY'
import pathlib, json
paths = sorted({str(p.parent) for p in pathlib.Path('.').rglob('pyproject.toml')})
print(json.dumps(paths))
PY

      - name: Lint/Test each project
        shell: bash
        run: |
          set -e
          projects=$(python - << 'PY'
import pathlib
print("\n".join(sorted({str(p.parent) for p in pathlib.Path('.').rglob('pyproject.toml')})))
PY
)
          if [ -z "$projects" ]; then
            echo "No Python projects found"
            exit 0
          fi

          for prj in $projects; do
            echo "=== $prj ==="

            if command -v uv >/dev/null 2>&1; then
              (cd "$prj" && uv pip install -e ".[dev]" || uv pip install -r requirements.txt || true)
            else
              (cd "$prj" && pip install -e ".[dev]" || pip install -r requirements.txt || true)
            fi

            (cd "$prj" && python -c "import ruff"   >/dev/null 2>&1 && ruff check .   || true)
            (cd "$prj" && python -c "import black"  >/dev/null 2>&1 && black --check . || true)
            (cd "$prj" && python -c "import pytest" >/dev/null 2>&1 && pytest -q      || true)
          done
